import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-improved-ziggurat@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";var h=p.isPrimitive,f=u.isPrimitive,j=g;var c=function(e,t){return!h(e)||j(e)?new TypeError("invalid argument. `mu` must be a number primitive and not `NaN`. Value: `"+e+"`."):f(t)?null:new TypeError("invalid argument. `sigma` must be a positive number. Value: `"+t+"`.")};var b=function(e,t,n){return t+n*e()},v=e,y=t,x=n,w=r,N=s,L=i,E=o,O=m,T=d.factory,P=a,V=l,G=c,R=b;var A=function(){var e,t,n,r,s,i,o;if(0===arguments.length)t=T();else if(1===arguments.length){if(!w(n=arguments[0]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+n+"`.");if(L(n,"prng")){if(!N(n.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+n.prng+"`.");t=T({prng:n.prng})}else t=T(n)}else{if(i=G(o=arguments[0],e=arguments[1]))throw i;if(arguments.length>2){if(!w(n=arguments[2]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+n+"`.");if(L(n,"prng")){if(!N(n.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+n.prng+"`.");t=T({prng:n.prng})}else t=T(n)}else t=T()}return s=void 0===o?f:h,r=t.PRNG,v(s,"NAME","normal"),n&&n.prng?(v(s,"seed",null),v(s,"seedLength",null),x(s,"state",E(null),O),v(s,"stateLength",null),v(s,"byteLength",null),v(s,"toJSON",E(null))):(y(s,"seed",m),y(s,"seedLength",d),x(s,"state",p,u),y(s,"stateLength",a),y(s,"byteLength",l),v(s,"toJSON",g)),v(s,"PRNG",r),s;function m(){return r.seed}function d(){return r.seedLength}function a(){return r.stateLength}function l(){return r.byteLength}function p(){return r.state}function u(e){r.state=e}function g(){var t={type:"PRNG"};return t.name=s.NAME,t.state=V(r.state),t.params=void 0===o?[]:[o,e],t}function h(){return R(t,o,e)}function f(e,n){return P(e)||P(n)||n<=0?NaN:R(t,e,n)}},J=A();e(J,"factory",A);var M=J;export{M as default};
